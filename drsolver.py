from z3 import *
solver=Solver()
set = Int("set")
vecelt = Int("vecelt")
ii = Int("ii")
xi = Int("xi")
jajp1 = Int("jajp1")
vecloc = Int("vecloc")
ratio = Int("ratio")
size = Int("size")
irow = Int("irow")
ivelt1 = Int("ivelt1")
iouter = Int("iouter")
naa = Int("naa")
shift = Int("shift")
mark = Int("mark")
acol = Int("acol")
sum = Int("sum")
rcond = Int("rcond")
nz = Int("nz")
z = Int("z")
nthreads = Int("nthreads")
nn1 = Int("nn1")
rnorm = Int("rnorm")
colidx = Int("colidx")
firstrow = Int("firstrow")
k = Int("k")
n = Int("n")
nrows = Int("nrows")
nzz = Int("nzz")
v = Int("v")
nza = Int("nza")
nzv = Int("nzv")
q = Int("q")
alpha = Int("alpha")
x = Int("x")
lastcol = Int("lastcol")
nzrow = Int("nzrow")
lastrow = Int("lastrow")
arow = Int("arow")
iv = Int("iv")
tran = Int("tran")
val = Int("val")
argc = Int("argc")
rowstr = Int("rowstr")
nnza = Int("nnza")
p = Int("p")
a = Int("a")
aelt = Int("aelt")
cgitmax = Int("cgitmax")
i = Int("i")
argv = Int("argv")
amult = Int("amult")
j = Int("j")
epsilon = Int("epsilon")
zeta = Int("zeta")
nonzer = Int("nonzer")
norm_temp12 = Int("norm_temp12")
norm_temp11 = Int("norm_temp11")
r = Int("r")
t = Int("t")
cgit = Int("cgit")
scale = Int("scale")
mflops = Int("mflops")
it = Int("it")
_class = Int("_class")
jcol = Int("jcol")
firstcol = Int("firstcol")
verified = Int("verified")
beta = Int("beta")
nzloc = Int("nzloc")
zeta_verify_value = Int("zeta_verify_value")
_reduction_lhs = Int("_reduction_lhs")
ivelt = Int("ivelt")
callcount = Int("callcount")
d = Int("d")
ipwr2 = Int("ipwr2")
rho = Int("rho")
rho0 = Int("rho0")
j_drdVar_104 = Int("j_drdVar_104")
wr_arr_index_0 = Int("wr_arr_index_0")
wr_cond_0 = And (wr_arr_index_0 == (j_drdVar_104 + 1), ( j_drdVar_104  <=  nrows) , ( j_drdVar_104 >= 1), True)
waws = False

j_drdVar_105 = Int("j_drdVar_105")
r_arr_index_0 = Int("r_arr_index_0")
r_cond_0 = And (r_arr_index_0 == (j_drdVar_105), ( j_drdVar_105  <=  nrows) , ( j_drdVar_105 >= 1), True)
raw_cond_0 = And( wr_cond_0, (wr_arr_index_0 == r_arr_index_0), r_cond_0, (j_drdVar_104 != j_drdVar_105))
raws = Or(raw_cond_0)
cstrnts = Or(waws,raws)
solver.add(cstrnts)
if solver.check() == z3.sat:
	print("seems like data race(waw/raw/war) exists within the loop!")
else:
	print("seems like no data race exists (please double check)")
