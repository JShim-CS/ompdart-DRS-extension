from z3 import *
solver=Solver()
ksize = Int("ksize")
coeff = Int("coeff")
dtref = Int("dtref")
xcr = Int("xcr")
xce = Int("xce")
epsilon = Int("epsilon")
xcedif = Int("xcedif")
zzcon5 = Int("zzcon5")
zzcon4 = Int("zzcon4")
zzcon3 = Int("zzcon3")
zzcon2 = Int("zzcon2")
zzcon1 = Int("zzcon1")
yycon5 = Int("yycon5")
yycon2 = Int("yycon2")
yycon1 = Int("yycon1")
xxcon5 = Int("xxcon5")
xxcon4 = Int("xxcon4")
dz5tz1 = Int("dz5tz1")
dz3tz1 = Int("dz3tz1")
dy5ty1 = Int("dy5ty1")
xceref = Int("xceref")
dy4ty1 = Int("dy4ty1")
dx2tx1 = Int("dx2tx1")
dx1tx1 = Int("dx1tx1")
c3c4tz3 = Int("c3c4tz3")
c3c4ty3 = Int("c3c4ty3")
c3c4tx3 = Int("c3c4tx3")
comz6 = Int("comz6")
comz4 = Int("comz4")
c2dtty1 = Int("c2dtty1")
c2dttx1 = Int("c2dttx1")
dttz2 = Int("dttz2")
temp = Int("temp")
Peta = Int("Peta")
n = Int("n")
cuf = Int("cuf")
us = Int("us")
dz1tz1 = Int("dz1tz1")
c5 = Int("c5")
buf = Int("buf")
tz2 = Int("tz2")
c5dssp = Int("c5dssp")
dz4tz1 = Int("dz4tz1")
forcing = Int("forcing")
jsize = Int("jsize")
verified = Int("verified")
xcrdif = Int("xcrdif")
tx1 = Int("tx1")
dx3 = Int("dx3")
zeta = Int("zeta")
dxmax = Int("dxmax")
dtty2 = Int("dtty2")
dx5tx1 = Int("dx5tx1")
dtpp = Int("dtpp")
step = Int("step")
dy1 = Int("dy1")
dz1 = Int("dz1")
Pzeta = Int("Pzeta")
u_exact = Int("u_exact")
ws = Int("ws")
Pxi = Int("Pxi")
u = Int("u")
dy1ty1 = Int("dy1ty1")
dx4tx1 = Int("dx4tx1")
dx4 = Int("dx4")
con16 = Int("con16")
dy3ty1 = Int("dy3ty1")
dzmax = Int("dzmax")
ue = Int("ue")
isize = Int("isize")
jp1 = Int("jp1")
tmp3 = Int("tmp3")
dy5 = Int("dy5")
d = Int("d")
dy2ty1 = Int("dy2ty1")
avec = Int("avec")
Pface = Int("Pface")
dx3tx1 = Int("dx3tx1")
dtdssp = Int("dtdssp")
_class = Int("_class")
yycon4 = Int("yycon4")
ty2 = Int("ty2")
tmp2 = Int("tmp2")
wijk = Int("wijk")
dz4 = Int("dz4")
um1 = Int("um1")
kp1 = Int("kp1")
tx2 = Int("tx2")
dy3 = Int("dy3")
ablock = Int("ablock")
cblock = Int("cblock")
dtemp = Int("dtemp")
iy = Int("iy")
lhs = Int("lhs")
dttx1 = Int("dttx1")
bvec = Int("bvec")
dssp = Int("dssp")
vs = Int("vs")
xxcon2 = Int("xxcon2")
xi = Int("xi")
iz = Int("iz")
mflops = Int("mflops")
eta = Int("eta")
rho_i = Int("rho_i")
im1 = Int("im1")
dnxm1 = Int("dnxm1")
dtty1 = Int("dtty1")
rms = Int("rms")
comz5 = Int("comz5")
tmp1 = Int("tmp1")
k = Int("k")
ix = Int("ix")
c = Int("c")
dttx2 = Int("dttx2")
jm1 = Int("jm1")
pivot = Int("pivot")
m = Int("m")
xxcon1 = Int("xxcon1")
no_time_steps = Int("no_time_steps")
c3c4 = Int("c3c4")
vijk = Int("vijk")
navg = Int("navg")
wp1 = Int("wp1")
km1 = Int("km1")
ip1 = Int("ip1")
up1 = Int("up1")
fp = Int("fp")
argc = Int("argc")
dx2 = Int("dx2")
dx1 = Int("dx1")
bblock = Int("bblock")
yycon3 = Int("yycon3")
con43 = Int("con43")
c2dttz1 = Int("c2dttz1")
argv = Int("argv")
ty3 = Int("ty3")
niter = Int("niter")
r = Int("r")
n3 = Int("n3")
nthreads = Int("nthreads")
qs = Int("qs")
dttz1 = Int("dttz1")
grid_points = Int("grid_points")
tmax = Int("tmax")
vm1 = Int("vm1")
c1c5 = Int("c1c5")
fjac = Int("fjac")
comz1 = Int("comz1")
njac = Int("njac")
j = Int("j")
rho_inv = Int("rho_inv")
uijk = Int("uijk")
vp1 = Int("vp1")
wm1 = Int("wm1")
square = Int("square")
dz2tz1 = Int("dz2tz1")
c4 = Int("c4")
dx5 = Int("dx5")
dymax = Int("dymax")
c2iv = Int("c2iv")
rhs = Int("rhs")
ce = Int("ce")
c1 = Int("c1")
c2 = Int("c2")
c3 = Int("c3")
dnym1 = Int("dnym1")
tz3 = Int("tz3")
dnzm1 = Int("dnzm1")
dt = Int("dt")
c1c2 = Int("c1c2")
i = Int("i")
c1345 = Int("c1345")
xxcon3 = Int("xxcon3")
dz2 = Int("dz2")
conz1 = Int("conz1")
tx3 = Int("tx3")
ty1 = Int("ty1")
xcrref = Int("xcrref")
tz1 = Int("tz1")
dy2 = Int("dy2")
dy4 = Int("dy4")
add = Int("add")
dz3 = Int("dz3")
q = Int("q")
dz5 = Int("dz5")
c4dssp = Int("c4dssp")
DRD_RANDOM_VAR = Int("DRD_RANDOM_VAR")
wr_arr_index_0_0 = Int("wr_arr_index_0_0")
wr_arr_index_0_1 = Int("wr_arr_index_0_1")
wr_arr_index_0_2 = Int("wr_arr_index_0_2")
wr_arr_index_0_3 = Int("wr_arr_index_0_3")
i_drdVar_24 = Int("i_drdVar_24")
j_drdVar_24 = Int("j_drdVar_24")
k_drdVar_24 = Int("k_drdVar_24")
i_drdVar_23 = Int("i_drdVar_23")
j_drdVar_23 = Int("j_drdVar_23")
k_drdVar_23 = Int("k_drdVar_23")
m_drdVar_16 = Int("m_drdVar_16")
solver.add((m_drdVar_16>=0),(m_drdVar_16<5))
j_drdVar_16 = Int("j_drdVar_16")
k_drdVar_16 = Int("k_drdVar_16")
m_drdVar_23 = Int("m_drdVar_23")
solver.add((m_drdVar_23>=0),(m_drdVar_23<5))
i_drdVar_16 = Int("i_drdVar_16")
m_drdVar_17 = Int("m_drdVar_17")
solver.add((m_drdVar_17>=0),(m_drdVar_17<5))
j_drdVar_17 = Int("j_drdVar_17")
m_drdVar_24 = Int("m_drdVar_24")
solver.add((m_drdVar_24>=0),(m_drdVar_24<5))
i_drdVar_17 = Int("i_drdVar_17")
m_drdVar_18 = Int("m_drdVar_18")
solver.add((m_drdVar_18>=0),(m_drdVar_18<5))
k_drdVar_17 = Int("k_drdVar_17")
k_drdVar_18 = Int("k_drdVar_18")
j_drdVar_18 = Int("j_drdVar_18")
i_drdVar_18 = Int("i_drdVar_18")
solver.add((k_drdVar_24>=1))
solver.add((k_drdVar_23>=1))
solver.add((k_drdVar_16>=1))
solver.add((k_drdVar_17>=1))
solver.add((k_drdVar_18>=1))
solver.add((j_drdVar_24>=1))
solver.add((j_drdVar_23>=1))
solver.add((j_drdVar_16>=1))
solver.add((j_drdVar_17>=1))
solver.add((j_drdVar_18>=1))
solver.add((i_drdVar_24>=1))
solver.add((i_drdVar_23>=1))
solver.add((i_drdVar_16>=1))
solver.add((i_drdVar_17>=1))
solver.add((i_drdVar_18>=1))
wr_cond_0_0 = And (wr_arr_index_0_0 == i_drdVar_23, True)
wr_cond_0_1 = And (wr_arr_index_0_1 == j_drdVar_23, True)
wr_cond_0_2 = And (wr_arr_index_0_2 == k_drdVar_23, True)
wr_cond_0_3 = And (wr_arr_index_0_3 == m_drdVar_23, True)
wr_arr_index_1_0 = Int("wr_arr_index_1_0")
wr_arr_index_1_1 = Int("wr_arr_index_1_1")
wr_arr_index_1_2 = Int("wr_arr_index_1_2")
wr_arr_index_1_3 = Int("wr_arr_index_1_3")
wr_cond_1_0 = And (wr_arr_index_1_0 == i_drdVar_17, True)
wr_cond_1_1 = And (wr_arr_index_1_1 == j_drdVar_17, True)
wr_cond_1_2 = And (wr_arr_index_1_2 == k_drdVar_17, True)
wr_cond_1_3 = And (wr_arr_index_1_3 == m_drdVar_17, True)
wr_arr_index_2_0 = Int("wr_arr_index_2_0")
wr_arr_index_2_1 = Int("wr_arr_index_2_1")
wr_arr_index_2_2 = Int("wr_arr_index_2_2")
wr_arr_index_2_3 = Int("wr_arr_index_2_3")
wr_cond_2_0 = And (wr_arr_index_2_0 == i_drdVar_16, True)
wr_cond_2_1 = And (wr_arr_index_2_1 == j_drdVar_16, True)
wr_cond_2_2 = And (wr_arr_index_2_2 == k_drdVar_16, True)
wr_cond_2_3 = And (wr_arr_index_2_3 == m_drdVar_16, True)
waw_cond_0 = And( wr_cond_0_0, wr_cond_1_0,wr_cond_0_1, wr_cond_1_1,wr_cond_0_2, wr_cond_1_2,wr_cond_0_3, wr_cond_1_3,
(wr_arr_index_0_0 == wr_arr_index_1_0), (wr_arr_index_0_1 == wr_arr_index_1_1), (wr_arr_index_0_2 == wr_arr_index_1_2), (wr_arr_index_0_3 == wr_arr_index_1_3))
waw_cond_1 = And( wr_cond_0_0, wr_cond_2_0,wr_cond_0_1, wr_cond_2_1,wr_cond_0_2, wr_cond_2_2,wr_cond_0_3, wr_cond_2_3,
(wr_arr_index_0_0 == wr_arr_index_2_0), (wr_arr_index_0_1 == wr_arr_index_2_1), (wr_arr_index_0_2 == wr_arr_index_2_2), (wr_arr_index_0_3 == wr_arr_index_2_3))
waw_cond_2 = And( wr_cond_1_0, wr_cond_2_0,wr_cond_1_1, wr_cond_2_1,wr_cond_1_2, wr_cond_2_2,wr_cond_1_3, wr_cond_2_3,
(wr_arr_index_1_0 == wr_arr_index_2_0), (wr_arr_index_1_1 == wr_arr_index_2_1), (wr_arr_index_1_2 == wr_arr_index_2_2), (wr_arr_index_1_3 == wr_arr_index_2_3))
waws = Or(waw_cond_2, waw_cond_1, waw_cond_0)

r_arr_index_0_0 = Int("r_arr_index_0_0")
r_arr_index_0_1 = Int("r_arr_index_0_1")
r_arr_index_0_2 = Int("r_arr_index_0_2")
r_arr_index_0_3 = Int("r_arr_index_0_3")
r_cond_0_0 = And (r_arr_index_0_0 == i_drdVar_24, True)
r_cond_0_1 = And (r_arr_index_0_1 == j_drdVar_24, True)
r_cond_0_2 = And (r_arr_index_0_2 == k_drdVar_24, True)
r_cond_0_3 = And (r_arr_index_0_3 == m_drdVar_24, True)
r_arr_index_1_0 = Int("r_arr_index_1_0")
r_arr_index_1_1 = Int("r_arr_index_1_1")
r_arr_index_1_2 = Int("r_arr_index_1_2")
r_arr_index_1_3 = Int("r_arr_index_1_3")
r_cond_1_0 = And (r_arr_index_1_0 == i_drdVar_18, True)
r_cond_1_1 = And (r_arr_index_1_1 == j_drdVar_18, True)
r_cond_1_2 = And (r_arr_index_1_2 == k_drdVar_18, True)
r_cond_1_3 = And (r_arr_index_1_3 == m_drdVar_18, True)
raws = False
solver.add(i_drdVar_24 != i_drdVar_23)
solver.add(i_drdVar_24 != i_drdVar_16)
solver.add(i_drdVar_24 != i_drdVar_17)
solver.add(i_drdVar_23 != i_drdVar_16)
solver.add(i_drdVar_23 != i_drdVar_17)
solver.add(i_drdVar_23 != i_drdVar_18)
solver.add(i_drdVar_16 != i_drdVar_17)
solver.add(i_drdVar_16 != i_drdVar_18)
solver.add(i_drdVar_17 != i_drdVar_18)
cstrnts = Or(waws,raws)
solver.add(cstrnts)
if solver.check() == z3.sat:
	print("seems like data race(waw/raw/war) exists within the loop!")
else:
	print("seems like no data race exists (please double check)")
