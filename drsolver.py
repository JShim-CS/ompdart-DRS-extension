from z3 import *
solver=Solver()
forcing = Int("forcing")
m = Int("m")
k = Int("k")
j = Int("j")
i = Int("i")
grid_points = Int("grid_points")
DRD_RANDOM_VAR = Int("DRD_RANDOM_VAR")
wr_arr_index_0_0 = Int("wr_arr_index_0_0")
wr_arr_index_0_1 = Int("wr_arr_index_0_1")
wr_arr_index_0_2 = Int("wr_arr_index_0_2")
wr_arr_index_0_3 = Int("wr_arr_index_0_3")
i_drdVar_18 = Int("i_drdVar_18")
j_drdVar_18 = Int("j_drdVar_18")
k_drdVar_18 = Int("k_drdVar_18")
m_drdVar_18 = Int("m_drdVar_18")
solver.add((m_drdVar_18>=0),(m_drdVar_18<5))
i_drdVar_16 = Int("i_drdVar_16")
j_drdVar_16 = Int("j_drdVar_16")
k_drdVar_16 = Int("k_drdVar_16")
m_drdVar_16 = Int("m_drdVar_16")
solver.add((m_drdVar_16>=0),(m_drdVar_16<5))
solver.add((k_drdVar_18>=1))
solver.add((k_drdVar_16>=1))
solver.add((j_drdVar_18>=1))
solver.add((j_drdVar_16>=1))
solver.add((i_drdVar_18>=1))
solver.add((i_drdVar_16>=1))
wr_cond_0_0 = And (wr_arr_index_0_0 == i_drdVar_16, True)
wr_cond_0_1 = And (wr_arr_index_0_1 == j_drdVar_16, True)
wr_cond_0_2 = And (wr_arr_index_0_2 == k_drdVar_16, True)
wr_cond_0_3 = And (wr_arr_index_0_3 == m_drdVar_16, True)
waws = False

r_arr_index_0_0 = Int("r_arr_index_0_0")
r_arr_index_0_1 = Int("r_arr_index_0_1")
r_arr_index_0_2 = Int("r_arr_index_0_2")
r_arr_index_0_3 = Int("r_arr_index_0_3")
r_cond_0_0 = And (r_arr_index_0_0 == i_drdVar_18 + 1, True)
r_cond_0_1 = And (r_arr_index_0_1 == j_drdVar_18, True)
r_cond_0_2 = And (r_arr_index_0_2 == k_drdVar_18, True)
r_cond_0_3 = And (r_arr_index_0_3 == m_drdVar_18, True)
raw_cond_0= And( wr_cond_0_0, r_cond_0_0,wr_cond_0_1, r_cond_0_1,wr_cond_0_2, r_cond_0_2,wr_cond_0_3, r_cond_0_3,
(wr_arr_index_0_0 == r_arr_index_0_0), (wr_arr_index_0_1 == r_arr_index_0_1), (wr_arr_index_0_2 == r_arr_index_0_2), (wr_arr_index_0_3 == r_arr_index_0_3))
raws = Or(raw_cond_0)
solver.add(i_drdVar_18 != i_drdVar_16)
cstrnts = Or(waws,raws)
solver.add(cstrnts)
if solver.check() == z3.sat:
	print("seems like data race(waw/raw/war) exists within the loop!")
else:
	print("seems like no data race exists (please double check)")
