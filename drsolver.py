from z3 import *
solver=Solver()
p = Int("p")
u = Int("u")
t = Int("t")
b = Int("b")
nsteps = Int("nsteps")
i = Int("i")
n = Int("n")
c = Int("c")
DRD_RANDOM_VAR = Int("DRD_RANDOM_VAR")
wr_arr_index_0_0 = Int("wr_arr_index_0_0")
wr_arr_index_0_1 = Int("wr_arr_index_0_1")
i_drdVar_11 = Int("i_drdVar_11")
t_drdVar_11 = Int("t_drdVar_11")
solver.add((t_drdVar_11>=0),(t_drdVar_11<nsteps))
t_drdVar_9 = Int("t_drdVar_9")
solver.add((t_drdVar_9>=0),(t_drdVar_9<nsteps))
i_drdVar_8 = Int("i_drdVar_8")
t_drdVar_8 = Int("t_drdVar_8")
solver.add((t_drdVar_8>=0),(t_drdVar_8<nsteps))
i_drdVar_6 = Int("i_drdVar_6")
t_drdVar_6 = Int("t_drdVar_6")
solver.add((t_drdVar_6>=0),(t_drdVar_6<nsteps))
i_drdVar_9 = Int("i_drdVar_9")
i_drdVar_5 = Int("i_drdVar_5")
t_drdVar_5 = Int("t_drdVar_5")
solver.add((t_drdVar_5>=0),(t_drdVar_5<nsteps))
solver.add((i_drdVar_11>=1),(i_drdVar_11<n-1))
solver.add((i_drdVar_8>=1),(i_drdVar_8<n-1))
solver.add((i_drdVar_6>=1),(i_drdVar_6<n-1))
solver.add((i_drdVar_9>=1),(i_drdVar_9<n-1))
solver.add((i_drdVar_5>=1),(i_drdVar_5<n-1))
wr_cond_0_0 = And (wr_arr_index_0_0 == 1 - p, True)
wr_cond_0_1 = And (wr_arr_index_0_1 == i_drdVar_5, True)
waws = False

r_arr_index_0_0 = Int("r_arr_index_0_0")
r_arr_index_0_1 = Int("r_arr_index_0_1")
r_cond_0_0 = And (r_arr_index_0_0 == p, True)
r_cond_0_1 = And (r_arr_index_0_1 == i_drdVar_11, True)
r_arr_index_1_0 = Int("r_arr_index_1_0")
r_arr_index_1_1 = Int("r_arr_index_1_1")
r_cond_1_0 = And (r_arr_index_1_0 == p, True)
r_cond_1_1 = And (r_arr_index_1_1 == i_drdVar_9 + 1, True)
r_arr_index_2_0 = Int("r_arr_index_2_0")
r_arr_index_2_1 = Int("r_arr_index_2_1")
r_cond_2_0 = And (r_arr_index_2_0 == p, True)
r_cond_2_1 = And (r_arr_index_2_1 == i_drdVar_8 - 1, True)
r_arr_index_3_0 = Int("r_arr_index_3_0")
r_arr_index_3_1 = Int("r_arr_index_3_1")
r_cond_3_0 = And (r_arr_index_3_0 == p, True)
r_cond_3_1 = And (r_arr_index_3_1 == i_drdVar_6, True)
raw_cond_0= And( wr_cond_0_0, r_cond_0_0,wr_cond_0_1, r_cond_0_1,
(wr_arr_index_0_0 == r_arr_index_0_0), (wr_arr_index_0_1 == r_arr_index_0_1))
raw_cond_1= And( wr_cond_0_0, r_cond_1_0,wr_cond_0_1, r_cond_1_1,
(wr_arr_index_0_0 == r_arr_index_1_0), (wr_arr_index_0_1 == r_arr_index_1_1))
raw_cond_2= And( wr_cond_0_0, r_cond_2_0,wr_cond_0_1, r_cond_2_1,
(wr_arr_index_0_0 == r_arr_index_2_0), (wr_arr_index_0_1 == r_arr_index_2_1))
raw_cond_3= And( wr_cond_0_0, r_cond_3_0,wr_cond_0_1, r_cond_3_1,
(wr_arr_index_0_0 == r_arr_index_3_0), (wr_arr_index_0_1 == r_arr_index_3_1))
raws = Or(raw_cond_3, raw_cond_2, raw_cond_1, raw_cond_0)
cstrnts = Or(waws,raws)
solver.add(cstrnts)
if solver.check() == z3.sat:
	print("seems like data race(waw/raw/war) exists within the loop!")
else:
	print("seems like no data race exists (please double check)")
